 public class MyDbContext : DbContext
{
    public MyDbContext() : base("MyDbContext") { }

    public DbSet<Category> Categories { get; set; }
    public DbSet<Product> Products { get; set; }
}  

//controller product model and category model

 public class ProductController : Controller
{
    private MyDbContext db = new MyDbContext();

    // GET: Product
    public ActionResult Index(int? page)
    {
        int pageSize = 10;
        int pageNumber = (page ?? 1);

        var products = db.Products.Include(p => p.Category)
                        .OrderBy(p => p.ProductId)
                        .Skip((pageNumber - 1) * pageSize)
                        .Take(pageSize)
                        .ToList();

        return View(products);
    }

    // GET: Product/Create
    public ActionResult Create()
    {
        ViewBag.CategoryId = new SelectList(db.Categories, "CategoryId", "CategoryName");
        return View();
    }

    // POST: Product/Create
    [HttpPost]
    [ValidateAntiForgeryToken]
    public ActionResult Create([Bind(Include = "ProductId,ProductName,Description,CategoryId")] Product product)
    {
        if (ModelState.IsValid)
        {
            db.Products.Add(product);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        ViewBag.CategoryId = new SelectList(db.Categories, "CategoryId", "CategoryName", product.CategoryId);
        return View(product);
    }

    // GET: Product/Edit/5
    public ActionResult Edit(int? id)
    {
        if (id == null)
        {
            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        }

        Product product = db.Products.Find(id);

        if (product == null)
        {
            return HttpNotFound();
        }

        ViewBag.CategoryId = new SelectList(db.Categories, "CategoryId", "CategoryName", product.CategoryId);
        return View(product);
    }

    // POST: Product/Edit/5
    [HttpPost]
    [ValidateAntiForgeryToken]
    public ActionResult Edit([Bind(Include = "ProductId,ProductName,Description,CategoryId")] Product product)
    {
        if (ModelState.IsValid)
        {
            db.Entry(product).State = EntityState.Modified;
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        ViewBag.CategoryId = new SelectList(db.Categories, "CategoryId", "CategoryName", product.CategoryId);
        return View(product);
    }

    // GET: Product/Delete/5
    public ActionResult Delete(int? id)
    {
        if (id == null)
        {
            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
        }

        Product product = db.Products.Find(id);

        if (product == null)
        {
            return HttpNotFound();
        }

        return View(product);
    }

    // POST: Product/Delete/5
    [HttpPost, ActionName("Delete")]
    [ValidateAntiForgeryToken